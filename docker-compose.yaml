version: '3'

services:
  # --- Snippet API ---
  snippet-api:
    container_name: "snippet-api"
    image: ghcr.io/ingsis-students/ingsis-snippet${ENVIRONMENT_FLAG}:latest
    platform: linux/amd64
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://${SNIPPET_DB_HOST}:${DB_PORT}/${DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      AUTH0_AUDIENCE: ${AUTH0_AUDIENCE}
      AUTH_SERVER_URI: ${AUTH_SERVER_URI}
      AUTH_CLIENT_ID: ${AUTH_CLIENT_ID}
      AUTH_CLIENT_SECRET: ${AUTH_CLIENT_SECRET}
      spring.security.oauth2.resourceserver.jwt.issuer-uri: ${AUTH_SERVER_URI}
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
    ports:
      - '8082:8080'
    depends_on:
      - snippet-db
      - redis

  snippet-db:
    container_name: "snippet-db"
    image: postgres:12
    platform: linux/amd64
    ports:
      - '5002:5432'
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db-data-ingsis-snippet:/var/lib/postgresql/data

  # --- Permission API ---
  permission-api:
    container_name: "permission-api"
    image: ghcr.io/ingsis-students/ingsis-permission${ENVIRONMENT_FLAG}:latest
    platform: linux/amd64
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://${PERMISSIONS_DB_HOST}:${DB_PORT}/${DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      AUTH0_AUDIENCE: ${AUTH0_AUDIENCE}
      AUTH_SERVER_URI: ${AUTH_SERVER_URI}
      AUTH_CLIENT_ID: ${AUTH_CLIENT_ID}
      AUTH_CLIENT_SECRET: ${AUTH_CLIENT_SECRET}
      spring.security.oauth2.resourceserver.jwt.issuer-uri: ${AUTH_SERVER_URI}
    ports:
      - '8083:8080'
    depends_on:
      - permission-db

  permission-db:
    container_name: "permission-db"
    image: postgres:12
    platform: linux/amd64
    ports:
      - '5003:5432'
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db-data-ingsis-user:/var/lib/postgresql/data

  # --- Parse API ---
  printscript-api:
    container_name: "printscript-api"
    image: ghcr.io/ingsis-students/ingsis-parse${ENVIRONMENT_FLAG}:latest
    platform: linux/amd64
    ports:
      - '8081:8080'
    environment:
      AUTH0_AUDIENCE: ${AUTH0_AUDIENCE}
      AUTH_SERVER_URI: ${AUTH_SERVER_URI}
      AUTH_CLIENT_ID: ${AUTH_CLIENT_ID}
      AUTH_CLIENT_SECRET: ${AUTH_CLIENT_SECRET}
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
    depends_on:
        - redis


  # --- Asset Service ---
  asset-api:
    container_name: "asset-api"
    image: ghcr.io/austral-ingsis/snippet-asset-service:latest
    platform: linux/amd64
    ports:
      - "8084:8080"
    environment:
      AZURE_HOST: "http://azurite"
      NEW_RELIC_APP_NAME: "asset-service"
      NEW_RELIC_AGENT_ENABLED: false


  # --- UI Service ---
  printscript-ui:
    container_name: "printscript-ui"
    image: ghcr.io/ingsis-students/printscript-ui${ENVIRONMENT_FLAG}:latest
    platform: linux/amd64
    ports:
      - "4173:4173"
    depends_on:
      - snippet-api
      - printscript-api
      - permission-api
      - asset-api

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    platform: linux/amd64
    container_name: "azurite"
    hostname: azurite
    restart: always
    ports:
      - "10000:10000"
      - "10001:10001"
      - "10002:10002"
    volumes:
      - blob:/workspace

  # --- Redis ---
  redis:
    image: redis:latest
    container_name: "redis"
    ports:
      - '6379:6379'


  # --- Nginx with SSL ---
  nginx:
    image: nginx:latest
    container_name: "nginx"
    volumes:
      - ./config/nginx-${CONFIG_FLAG}.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt/live/ingsis-students.duckdns.org:/etc/letsencrypt/live/ingsis-students.duckdns.org:ro
      - /etc/letsencrypt/archive/ingsis-students.duckdns.org:/etc/letsencrypt/archive/ingsis-students.duckdns.org:ro
    ports:
      - "80:80"
      - "443:443"  # Expose HTTPS
    depends_on:
      - snippet-api
      - printscript-api
      - permission-api
      - asset-api

volumes:
  db-data-ingsis-snippet:
    external: false
  db-data-ingsis-user:
    external: false
  blob:
    external: false